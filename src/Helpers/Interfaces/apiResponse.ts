// type with generics
export interface apiResponse<T> {
  hasError: boolean;
  message: string;
  statusCode: number;
  data: T;
}

export interface BasicUser {
  emailAddress: string;
  fullName: string;
  firstName: string;
  lastName: string;
  phoneNumber: string;
  userId: string;
  profilePictureUrl: string;
  profilePictureId: string;
}

export interface AuthResponse extends BasicUser {
  accessToken: string;
  clientBalance: ClientTransactionBalance;
}

export interface LoginPayload {
  username: string;
  password: string;
}

export interface RegisterPayload {
  email: string;
  firstName: string;
  lastName: string;
  password: string;
  userName: string;
  phoneNumber: string;
}

export interface Transaction {
  id: number;
  title: string;
  description: string;
  amount: number;
  dateAdded: string;
  dateAddedFormatted: string;
  categoryId: number;
  categoryName: string;
  categoryIcon: string;
  inFlow: boolean;
  userId: string;
}

export interface Category {
  id: number;
  title: string;
  description: string;
  icon: string;
  isSubcategory: boolean;
  userId: string;
  dateAdded: string;
}

export interface ClientTransactionBalance {
  totalInflow: number;
  totalOutflow: number;
  balance: number;
  percentage: number;
}

// Generated by https://quicktype.io

export interface DashboardModel {
  transactions: Transaction[];
  balance: ClientTransactionBalance;
  monthlyBalance: MonthlyBalance[] | [];
}

export interface MonthlyBalance {
  month: string;
  balance: number;
  percentage: number;
}

export interface PasswordResetPayload {
  email: string;
  code: string;
  password: string;
}

export interface EmailConfirmationPayload {
  username: string;
  code: string;
}

// Generated by https://quicktype.io

export interface ProfilePictureResponse {
  fileUrl: string;
  publicId: string;
}

export interface ResetPasswordProfilePayload{
  username: string,
  currentPassword: string,
  newPassword: string
}


export interface ResetPasswordProfileResponse {
  hasError: boolean;
  message: string;
  statusCode: number;
  data: string;
}